AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy EC2 instances and ALB for Project 1 - Outline of Resources/Parameters

Parameters:
  NetworkStackName: 
    Type: String
    Default: Template1

# Need to ask user for name of network stack

# AMI ID FOR WEB SERVER = ami-09d3b3274b6c5d4aa

# Optional BastionHostInstance would go here

Resources:
  VPC: 
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
# Optional BastionHostInstance would go here
  WebServerInstance1:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-09d3b3274b6c5d4aa
      SubnetId:
        Fn::ImportValue:
          Fn::Sub: "${NetworkStackName}-PrivateSubnet1"
      SecurityGroupIds:
        - Fn::ImportValue: 
            Fn::Sub: "${NetworkStackName}-WebInstanceSecurityGroup"
  
  # When you create these resources you'll need to reference values that were exported from stack #1
  # One example would be the Private Subnet ID for placing WebServerInstance1 on
  # This should look SOMETHING like this in my example from class:
  
  WebServerInstance2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-09d3b3274b6c5d4aa
      SubnetId:
        Fn::ImportValue:
          Fn::Sub: "${NetworkStackName}-PrivateSubnet2"
      SecurityGroupIds:
        - Fn::ImportValue: 
            Fn::Sub: "${NetworkStackName}-WebInstanceSecurityGroup"


  ALBListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
        LoadBalancerArn: !Ref ApplicationLoadBalancer
        Port: 80
        Protocol: "HTTP"

  ALBTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
        HealthCheckIntervalSeconds: 30
        HealthCheckPath: "/"
        Port: 80
        Protocol: "HTTP"
        HealthCheckPort: "traffic-port"
        HealthCheckProtocol: "HTTP"
        HealthCheckTimeoutSeconds: 5
        UnhealthyThresholdCount: 2
        TargetType: "instance"
        Matcher: 
            HttpCode: "200"
        HealthyThresholdCount: 5
        VpcId: !Ref VPC
        Name: "target-group"
        HealthCheckEnabled: true

  ApplicationLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
        Name: "Application-Load-Balancer"
        Scheme: "internet-facing"
        Type: "application"
        Subnets: 
          - Fn::ImportValue:
              Fn::Sub: "${NetworkStackName}-PublicSubnet1"
          - Fn::ImportValue:
              Fn::Sub: "${NetworkStackName}-PublicSubnet2"
        SecurityGroups: 
          - Fn::ImportValue:
              Fn::Sub: "${NetworkStackName}-ALBSecurityGroup"
        IpAddressType: "ipv4"

#  Outputs:
# This is an example of the complete YAML code for outputting the VPC information and also exporting the VPC ID for use
# by another template
#  ApplicationLoadBalancer:
# Need the DNS/URL of the ApplicationLoadBalancer

AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy EC2 instances and ALB for Project 1 - Outline of Resources/Parameters

Parameters:
  NetworkStackName: 
    Type: String
    Default: Template1

# Need to ask user for name of network stack

# AMI ID FOR WEB SERVER = ami-09d3b3274b6c5d4aa

# Optional BastionHostInstance would go here

Resources:

# Optional BastionHostInstance would go here
  WebServerInstance1:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-09d3b3274b6c5d4aa
      SubnetId:
        Fn::ImportValue:
          Fn::Sub: "${NetworkStackName}-PrivateSubnet1"
      SecurityGroupIds:
        - Fn::ImportValue: 
            Fn::Sub: "${NetworkStackName}-WebInstanceSecurityGroup"
  
  # When you create these resources you'll need to reference values that were exported from stack #1
  # One example would be the Private Subnet ID for placing WebServerInstance1 on
  # This should look SOMETHING like this in my example from class:
  
  WebServerInstance2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-09d3b3274b6c5d4aa
      SubnetId:
        Fn::ImportValue:
          Fn::Sub: "${NetworkStackName}-PrivateSubnet2"
      SecurityGroupIds:
        - Fn::ImportValue: 
            Fn::Sub: "${NetworkStackName}-WebInstanceSecurityGroup"


  ALBTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
        HealthCheckIntervalSeconds: 30
        HealthCheckPath: "/"
        Port: 80
        Protocol: "HTTP"
        UnhealthyThresholdCount: 2
        TargetType: "instance"
        Targets:
          - Id: !Ref WebServerInstance1
            Port: 80
          - Id: !Ref WebServerInstance2
            Port: 80
        HealthyThresholdCount: 5
        VpcId: 
          Fn::ImportValue:
            Fn::Sub: ${NetworkStackName}-VPC
        Name: "target-group"

  ApplicationLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
        Name: "Application-Load-Balancer"
        Scheme: "internet-facing"
        Type: "application"
        Subnets: 
          - Fn::ImportValue:
              Fn::Sub: "${NetworkStackName}-PrivateSubnet1"
          - Fn::ImportValue:
              Fn::Sub: "${NetworkStackName}-PrivateSubnet2"
        SecurityGroups: 
          - Fn::ImportValue:
              Fn::Sub: "${NetworkStackName}-ALBSecurityGroup"
        IpAddressType: "ipv4"
  
  ALBListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - Type: forward
          ForwardConfig:
            TargetGroups:
              - TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: "HTTP"


Outputs:
# This is an example of the complete YAML code for outputting the VPC information and also exporting the VPC ID for use
# by another template
  ApplicationLoadBalancer:
    Description: Load Balancer
    Value: !Ref ApplicationLoadBalancer

# Need the DNS/URL of the ApplicationLoadBalancer
